{
  "title": "Miravi - a linked data viewer",
  "logoLocation": "images/miravi.png",
  "logoRedirectURL": "https://github.com/SolidLabResearch/miravi-a-linked-data-viewer",
  "queryFolder": "queries",
  "showMilliseconds": false,
  "defaultIDP": "http://localhost:8080",
  "introductionText": "Please log in as the appropriate actor and make your choice in the menu on the left.",
  "queryGroups": [
    {
      "id": "gr-xmpl",
      "name": "Example queries"
    },
    {
      "id": "gr-proj",
      "name": "Project related examples",
      "icon": "FactoryIcon"
    },
    {
      "id": "gr-test",
      "name": "For testing only",
      "icon": "BugReportIcon"
    }
  ],
  "queries": [
    {
      "id": "1000",
      "queryGroupId": "gr-xmpl",
      "queryLocation": "idols.rq",
      "name": "My idols",
      "description": "Demonstrates a simple query, using a proxy.",
      "comunicaContext": {
        "sources": [
          "http://localhost:8001/example/idols"
        ]
      },
      "httpProxies": [
        {
          "urlStart": "http://localhost:8001",
          "httpProxy": "http://localhost:8000/"
        }
      ]
    },
    {
      "id": "1010",
      "queryGroupId": "gr-xmpl",
      "queryLocation": "images_test.rq",
      "name": "Some images",
      "description": "Demonstrates how to show images in a query result.",
      "icon": "PhotoIcon",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/cute-cats"
        ]
      }
    },
    {
      "id": "1020",
      "queryGroupId": "gr-xmpl",
      "queryLocation": "ask_picasso.rq",
      "name": "Is there an artist influenced by Picasso?",
      "description": "Demonstrates an ASK query.",
      "icon": "BrushIcon",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/artists"
        ]
      },
      "askQuery": {
        "trueText": "Yes, there is at least one artist influenced by Picasso!",
        "falseText": "No, there is not a single artist influenced by Picasso."
      }
    },
    {
      "id": "1030",
      "queryGroupId": "gr-xmpl",
      "queryLocation": "construct_picasso.rq",
      "name": "A graph of artists influenced by Picasso",
      "description": "Demonstrates a CONSTRUCT query.",
      "icon": "BrushIcon",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/artists"
        ]
      }
    },
    {
      "id": "1040",
      "queryGroupId": "gr-xmpl",
      "queryLocation": "average.rq",
      "name": "Average value",
      "description": "Demonstrates a query calculating some average.",
      "icon": "FunctionsIcon",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/values"
        ]
      }
    },
    {
      "id": "1050",
      "queryGroupId": "gr-xmpl",
      "queryLocation": "books.rq",
      "name": "A secret list of my favorite books",
      "description": "Demonstrates a query whose source requires authentication.",
      "icon": "MenuBookIcon",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/favourite-books"
        ]
      }
    },
    {
      "id": "1060",
      "queryGroupId": "gr-xmpl",
      "queryLocation": "books.rq",
      "name": "A public list of books I'd love to own",
      "description": "Demonstrates a query whose source does not require authentication.",
      "icon": "MenuBookIcon",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/wish-list"
        ]
      }
    },
    {
      "id": "1070",
      "queryGroupId": "gr-xmpl",
      "queryLocation": "musicians.rq",
      "name": "A query about musicians",
      "description": "Demonstrates what happens if one of the sources is not available (fetch failure).",
      "icon": "MusicNoteIcon",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/favourite-musicians",
          "http://www.example.com/fetch-failure-but-query-success"
        ],
        "lenient": true
      }
    },
    {
      "id": "1080",
      "queryGroupId": "gr-xmpl",
      "queryLocation": "musicians_variables.rq",
      "name": "A templated query about musicians",
      "description": "Demonstrates the usage of templated queries.",
      "icon": "MusicNoteIcon",
      "variables": {
        "genre": [
          "\"Romantic\"",
          "\"Baroque\"",
          "\"Classical\""
        ]
      },
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/favourite-musicians"
        ]
      }
    },
    {
      "id": "1090",
      "queryGroupId": "gr-xmpl",
      "queryLocation": "musicians_variables.rq",
      "name": "A templated query about musicians (indirect variables)",
      "description": "Demonstrates the usage of templated queries, here with indirectly loaded variable values.",
      "icon": "MusicNoteIcon",
      "indirectVariables": {
        "queryLocations": [
          "variableQueries/musicians_genre_variable.rq"
        ]
      },
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/favourite-musicians"
        ]
      }
    },
    {
      "id": "1100",
      "queryGroupId": "gr-xmpl",
      "queryLocation": "musicians_variables2.rq",
      "name": "A templated query about musicians (two variables)",
      "description": "Demonstrates the usage of templated queries, here with two variables.",
      "icon": "MusicNoteIcon",
      "variables": {
        "genre": [
          "\"Romantic\"",
          "\"Baroque\"",
          "\"Classical\""
        ],
        "sameAsUrl": [
          "<https://en.wikipedia.org/wiki/Ludwig_van_Beethoven>",
          "<https://en.wikipedia.org/wiki/Wolfgang_Amadeus_Mozart>",
          "<https://en.wikipedia.org/wiki/Johann_Sebastian_Bach>",
          "<https://en.wikipedia.org/wiki/Franz_Schubert>"
        ]
      },
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/favourite-musicians"
        ]
      }
    },
    {
      "id": "1110",
      "queryGroupId": "gr-xmpl",
      "queryLocation": "components.rq",
      "name": "Source verification",
      "description": "Demonstrates source verification. Query components from three kinds of sources: a non-verifiable source, a successfully verifiable source, and a verifiable source with an incorrect proof.",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/verifiable-example/components-vc",
          "http://localhost:8080/verifiable-example/components-vc-incorrect-proof",
          "http://localhost:8080/example/components"
        ]
      }
    },
    {
      "id": "1120",
      "queryGroupId": "gr-xmpl",
      "queryLocation": "components_materials.rq",
      "name": "Sources from an index file",
      "description": "Query components (including details about materials) with the sources obtained from index files.",
      "sourcesIndex": {
        "url": "http://localhost:8080/example/index-example-texon-only-lt",
        "queryLocation": "/sourceQueries/index_example_common_lt.rq"
      }
    },
    {
      "id": "3000",
      "queryGroupId": "gr-proj",
      "queryLocation": "components.rq",
      "name": "Components",
      "description": "Query components.",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/components"
        ]
      }
    },
    {
      "id": "3010",
      "queryGroupId": "gr-proj",
      "queryLocation": "components_variable.rq",
      "name": "Components (select one)",
      "description": "Query one component; select it by name.",
      "indirectVariables": {
        "queryLocations": [
          "variableQueries/components_name_variable.rq"
        ]
      },
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/components"
        ]
      }
    },
    {
      "id": "3020",
      "queryGroupId": "gr-proj",
      "queryLocation": "components_materials.rq",
      "name": "Components and their materials",
      "description": "Query components (including details about materials).",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/components",
          "http://localhost:8080/example/boms",
          "http://localhost:8080/example/materials"
        ],
        "lenient": true
      }
    },
    {
      "id": "3030",
      "queryGroupId": "gr-proj",
      "queryLocation": "component_material_variables.rq",
      "name": "Component (select one) and percentage of a material (select one)",
      "description": "Select a component by its name and a material by its name to see by what percentage the material is used in that component (empty result of not used).",
      "indirectVariables": {
        "queryLocations": [
          "variableQueries/components_name_variable.rq",
          "variableQueries/materials_name_variable.rq"
        ]
      },
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/components",
          "http://localhost:8080/example/boms",
          "http://localhost:8080/example/materials"
        ]
      }
    },
    {
      "id": "8900",
      "queryGroupId": "gr-test",
      "queryLocation": "ask_picasso.rq",
      "name": "Is there an artist influenced by Picasso (forced negative answer)?",
      "description": "Demonstrates an ASK query, here with negative answer, forced by using an irrelevant data source.",
      "icon": "BrushIcon",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/values"
        ]
      },
      "askQuery": {
        "trueText": "Yes, there is at least one artist influenced by Picasso!",
        "falseText": "No, there is not a single artist influenced by Picasso (if you look at the wrong data)."
      }
    },
    {
      "id": "9000",
      "queryGroupId": "gr-test",
      "queryLocation": "average",
      "name": "Average value - queryLocation without rq",
      "description": "Should demonstrates a query calculating some average, but the queryLocation is faultive.",
      "icon": "FunctionsIcon",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/values"
        ]
      }
    },
    {
      "id": "9010",
      "queryGroupId": "gr-test",
      "queryLocation": "averagefefefefe.rq",
      "name": "Average value - unexisting queryLocation (ends in .rq)",
      "description": "Should demonstrates a query calculating some average, but the queryLocation is faultive.",
      "icon": "FunctionsIcon",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/values"
        ]
      }
    },
    {
      "id": "9020",
      "queryGroupId": "gr-test",
      "queryLocation": "components_materials.rq",
      "name": "Sources from an index file (requiring authentication)",
      "description": "Query components (including details about materials) with the sources obtained from index files that require authentication to retrieve said sources.",
      "sourcesIndex": {
        "url": "http://localhost:8080/example/index-example-texon-only-lt-AUTH",
        "queryLocation": "/sourceQueries/index_example_common_lt.rq"
      }
    },
    {
      "id": "9030",
      "queryGroupId": "gr-test",
      "queryLocation": "books.rq",
      "name": "A query on a secret and a public list of books",
      "description": "Demonstrates a query on a source requiring authentication and a source not requiring authentication.",
      "icon": "MenuBookIcon",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/favourite-books",
          "http://localhost:8080/example/wish-list"
        ],
        "lenient": true
      }
    },
    {
      "id": "9040",
      "queryGroupId": "gr-test",
      "queryLocation": "musicians_variables2.rq",
      "name": "A templated query about musicians, two variables (indirect variables)",
      "description": "Demonstrates the usage of templated queries, here with indirectly loaded variable values and with two variables.",
      "icon": "MusicNoteIcon",
      "indirectVariables": {
        "queryLocations": [
          "variableQueries/musicians_genre_variable.rq",
          "variableQueries/musicians_sameAs_variable.rq"
        ]
      },
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/favourite-musicians"
        ]
      }
    },
    {
      "id": "9050",
      "queryGroupId": "gr-test",
      "queryLocation": "musicians_variables_double.rq",
      "name": "A templated query about musicians (double results)",
      "description": "This query tests whether a template variable is expanded more than once. If it works, this query will return all results twice.",
      "icon": "MusicNoteIcon",
      "variables": {
        "genre": [
          "\"Romantic\"",
          "\"Baroque\"",
          "\"Classical\""
        ]
      },
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/favourite-musicians"
        ]
      }
    },
    {
      "id": "9060",
      "queryGroupId": "gr-test",
      "queryLocation": "components_materials.rq",
      "name": "Components and their materials, with sources from index file also containing an unauthorized source",
      "description": "Query components (including details about materials) with the sources obtained from index files, including an unauthorized source of favourite books, to check lenient.",
      "sourcesIndex": {
        "url": "http://localhost:8080/example/index-example-with-unauthorized-source-lt",
        "queryLocation": "/sourceQueries/index_example_common_lt.rq"
      }
    },
    {
      "id": "9070",
      "queryGroupId": "gr-test",
      "queryLocation": "components_materials.rq",
      "name": "Components and their materials, with mixed sources from comunicaContext and index file",
      "description": "Query components (including details about materials) with sources obtained from both comunicaContext.sources and index files.",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/favourite-books",
          "http://localhost:8080/example/components"
        ],
        "lenient": true
      },
      "sourcesIndex": {
        "url": "http://localhost:8080/example/index-example-texon-only-lt",
        "queryLocation": "/sourceQueries/index_example_common_lt.rq"
      }
    },
    {
      "id": "9080",
      "queryGroupId": "gr-test",
      "queryLocation": "component_material_one_variable.rq",
      "name": "Component and materials - 1 variable (indirect source & indirect variables)",
      "description": "Query components (including details about materials) with the sources obtained from index files and variables from the sources.",
      "indirectVariables": {
        "queryLocations": [
          "variableQueries/components_name_variable.rq"
        ]
      },
      "sourcesIndex": {
        "url": "http://localhost:8080/example/index-example-texon-only-lt",
        "queryLocation": "/sourceQueries/index_example_common_lt.rq"
      }
    },
    {
      "id": "9081",
      "queryGroupId": "gr-test",
      "queryLocation": "component_material_one_variable.rq",
      "name": "Component and materials - 1 variable (indirect source & indirect variables; one unauthorized source)",
      "description": "Query components (including details about materials) with the sources obtained from index files and variables from the sources. One unauthorized indirect source, to check lenient while getting variable options.",
      "indirectVariables": {
        "queryLocations": [
          "variableQueries/components_name_variable.rq"
        ]
      },
      "sourcesIndex": {
        "url": "http://localhost:8080/example/index-example-with-unauthorized-source-lt",
        "queryLocation": "/sourceQueries/index_example_common_lt.rq"
      }
    },
    {
      "id": "9082",
      "queryGroupId": "gr-test",
      "queryLocation": "component_material_one_variable.rq",
      "name": "Component and materials - 1 variable (indirect source & indirect variables; no indirect sources found)",
      "description": "Query components (including details about materials) with zero sources obtained from index files and variables from the sources.",
      "indirectVariables": {
        "queryLocations": [
          "variableQueries/components_name_variable.rq"
        ]
      },
      "sourcesIndex": {
        "url": "http://localhost:8080/example/index-example-texon-only-lt",
        "queryLocation": "/sourceQueries/index_example_common_lt_bad.rq"
      }
    },
    {
      "id": "9090",
      "queryGroupId": "gr-test",
      "queryLocation": "component_material_variables.rq",
      "name": "Component and materials - 2 variables (indirect source & indirect variables)",
      "description": "Query components (including details about materials) with the sources obtained from index files and variables from the sources.",
      "indirectVariables": {
        "queryLocations": [
          "variableQueries/components_name_variable.rq",
          "variableQueries/materials_name_variable.rq"
        ]
      },
      "sourcesIndex": {
        "url": "http://localhost:8080/example/index-example-texon-only-lt",
        "queryLocation": "/sourceQueries/index_example_common_lt.rq"
      }
    },
    {
      "id": "9100",
      "queryGroupId": "gr-test",
      "queryLocation": "spo_distinct_offset_limit.rq",
      "name": "A test on DISTINCT LIMIT OFFSET",
      "description": "Query two sources containing duplicated triples. The query uses DISTINCT, LIMIT and OFFSET.",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/dup1",
          "http://localhost:8080/example/dup2"
        ]
      }
    },
    {
      "id": "9110",
      "queryGroupId": "gr-test",
      "queryLocation": "so_distinct.rq",
      "name": "A test on counting the total number results",
      "description": "Query a source containing ?s ?p1 ?o and ?s ?p2 ?o with p1 != p2 and request only ?s ?o.",
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/dup1"
        ]
      }
    },
    {
      "id": "9120",
      "queryGroupId": "gr-test",
      "queryLocation": "example_spox.rq",
      "name": "Triples with object, objects of different types",
      "description": "Gives at most 50 triples with a given object in the indicated datasources.",
      "indirectVariables": {
        "queryLocations": [
          "variableQueries/example_o.rq"
        ]
      },
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/test-objects"
        ],
        "lenient": true
      }
    },
    {
      "id": "9130",
      "queryGroupId": "gr-test",
      "queryLocation": "components.rq",
      "name": "Http proxy test combined with indirect sources and source verification",
      "description": "Contents same as those for the 'Source verification' query, but now through http proxy in a worse case test.",
      "sourcesIndex": {
        "url": "http://localhost:8080/example/index-example-for-proxy-test-only",
        "queryLocation": "/sourceQueries/index_example_common_lt.rq"
      },
      "httpProxies": [
        {
          "urlStart": "http://localhost:8080",
          "httpProxy": "http://localhost:8000/"
        }
      ]
    },
    {
      "id": "9140",
      "queryGroupId": "gr-test",
      "queryLocation": "components_materials.rq",
      "name": "Sources from an index file - no sources",
      "description": "Test what happens if the sourceIndex query results in 0 sources.",
      "sourcesIndex": {
        "url": "http://localhost:8080/example/index-example-file-does-not-exist",
        "queryLocation": "/sourceQueries/index_example_common_lt.rq"
      }
    },
    {
      "id": "9150",
      "queryGroupId": "gr-test",
      "queryLocation": "musicians_variables.rq",
      "name": "A templated query about musicians (indirect variables) - no sources",
      "description": "Test what happens when variables cannot be loaded because no source(s) available.",
      "icon": "MusicNoteIcon",
      "indirectVariables": {
        "queryLocations": [
          "variableQueries/musicians_genre_variable.rq"
        ]
      },
      "comunicaContext": {
        "sources": [
          "http://localhost:8080/example/favourite-musicians-file-does-not-exist"
        ]
      }
    }
  ]
}